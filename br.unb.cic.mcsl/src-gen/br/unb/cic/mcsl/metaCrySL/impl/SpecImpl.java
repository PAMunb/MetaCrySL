/**
 * generated by Xtext 2.22.0
 */
package br.unb.cic.mcsl.metaCrySL.impl;

import br.unb.cic.mcsl.metaCrySL.EventSpec;
import br.unb.cic.mcsl.metaCrySL.ForbiddenSpec;
import br.unb.cic.mcsl.metaCrySL.MetaCrySLPackage;
import br.unb.cic.mcsl.metaCrySL.ObjectSpec;
import br.unb.cic.mcsl.metaCrySL.OrderSpec;
import br.unb.cic.mcsl.metaCrySL.Spec;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.xtext.common.types.JvmTypeReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Spec</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link br.unb.cic.mcsl.metaCrySL.impl.SpecImpl#getClassName <em>Class Name</em>}</li>
 *   <li>{@link br.unb.cic.mcsl.metaCrySL.impl.SpecImpl#getObjectSpec <em>Object Spec</em>}</li>
 *   <li>{@link br.unb.cic.mcsl.metaCrySL.impl.SpecImpl#getForbiddenSpec <em>Forbidden Spec</em>}</li>
 *   <li>{@link br.unb.cic.mcsl.metaCrySL.impl.SpecImpl#getEventSpec <em>Event Spec</em>}</li>
 *   <li>{@link br.unb.cic.mcsl.metaCrySL.impl.SpecImpl#getOrderSpec <em>Order Spec</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SpecImpl extends MinimalEObjectImpl.Container implements Spec
{
  /**
   * The cached value of the '{@link #getClassName() <em>Class Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getClassName()
   * @generated
   * @ordered
   */
  protected JvmTypeReference className;

  /**
   * The cached value of the '{@link #getObjectSpec() <em>Object Spec</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getObjectSpec()
   * @generated
   * @ordered
   */
  protected ObjectSpec objectSpec;

  /**
   * The cached value of the '{@link #getForbiddenSpec() <em>Forbidden Spec</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getForbiddenSpec()
   * @generated
   * @ordered
   */
  protected ForbiddenSpec forbiddenSpec;

  /**
   * The cached value of the '{@link #getEventSpec() <em>Event Spec</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEventSpec()
   * @generated
   * @ordered
   */
  protected EventSpec eventSpec;

  /**
   * The cached value of the '{@link #getOrderSpec() <em>Order Spec</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOrderSpec()
   * @generated
   * @ordered
   */
  protected OrderSpec orderSpec;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SpecImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MetaCrySLPackage.Literals.SPEC;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JvmTypeReference getClassName()
  {
    return className;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetClassName(JvmTypeReference newClassName, NotificationChain msgs)
  {
    JvmTypeReference oldClassName = className;
    className = newClassName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__CLASS_NAME, oldClassName, newClassName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setClassName(JvmTypeReference newClassName)
  {
    if (newClassName != className)
    {
      NotificationChain msgs = null;
      if (className != null)
        msgs = ((InternalEObject)className).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__CLASS_NAME, null, msgs);
      if (newClassName != null)
        msgs = ((InternalEObject)newClassName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__CLASS_NAME, null, msgs);
      msgs = basicSetClassName(newClassName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__CLASS_NAME, newClassName, newClassName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ObjectSpec getObjectSpec()
  {
    return objectSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetObjectSpec(ObjectSpec newObjectSpec, NotificationChain msgs)
  {
    ObjectSpec oldObjectSpec = objectSpec;
    objectSpec = newObjectSpec;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__OBJECT_SPEC, oldObjectSpec, newObjectSpec);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setObjectSpec(ObjectSpec newObjectSpec)
  {
    if (newObjectSpec != objectSpec)
    {
      NotificationChain msgs = null;
      if (objectSpec != null)
        msgs = ((InternalEObject)objectSpec).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__OBJECT_SPEC, null, msgs);
      if (newObjectSpec != null)
        msgs = ((InternalEObject)newObjectSpec).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__OBJECT_SPEC, null, msgs);
      msgs = basicSetObjectSpec(newObjectSpec, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__OBJECT_SPEC, newObjectSpec, newObjectSpec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ForbiddenSpec getForbiddenSpec()
  {
    return forbiddenSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetForbiddenSpec(ForbiddenSpec newForbiddenSpec, NotificationChain msgs)
  {
    ForbiddenSpec oldForbiddenSpec = forbiddenSpec;
    forbiddenSpec = newForbiddenSpec;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__FORBIDDEN_SPEC, oldForbiddenSpec, newForbiddenSpec);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setForbiddenSpec(ForbiddenSpec newForbiddenSpec)
  {
    if (newForbiddenSpec != forbiddenSpec)
    {
      NotificationChain msgs = null;
      if (forbiddenSpec != null)
        msgs = ((InternalEObject)forbiddenSpec).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__FORBIDDEN_SPEC, null, msgs);
      if (newForbiddenSpec != null)
        msgs = ((InternalEObject)newForbiddenSpec).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__FORBIDDEN_SPEC, null, msgs);
      msgs = basicSetForbiddenSpec(newForbiddenSpec, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__FORBIDDEN_SPEC, newForbiddenSpec, newForbiddenSpec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EventSpec getEventSpec()
  {
    return eventSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEventSpec(EventSpec newEventSpec, NotificationChain msgs)
  {
    EventSpec oldEventSpec = eventSpec;
    eventSpec = newEventSpec;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__EVENT_SPEC, oldEventSpec, newEventSpec);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEventSpec(EventSpec newEventSpec)
  {
    if (newEventSpec != eventSpec)
    {
      NotificationChain msgs = null;
      if (eventSpec != null)
        msgs = ((InternalEObject)eventSpec).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__EVENT_SPEC, null, msgs);
      if (newEventSpec != null)
        msgs = ((InternalEObject)newEventSpec).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__EVENT_SPEC, null, msgs);
      msgs = basicSetEventSpec(newEventSpec, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__EVENT_SPEC, newEventSpec, newEventSpec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public OrderSpec getOrderSpec()
  {
    return orderSpec;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOrderSpec(OrderSpec newOrderSpec, NotificationChain msgs)
  {
    OrderSpec oldOrderSpec = orderSpec;
    orderSpec = newOrderSpec;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__ORDER_SPEC, oldOrderSpec, newOrderSpec);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOrderSpec(OrderSpec newOrderSpec)
  {
    if (newOrderSpec != orderSpec)
    {
      NotificationChain msgs = null;
      if (orderSpec != null)
        msgs = ((InternalEObject)orderSpec).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__ORDER_SPEC, null, msgs);
      if (newOrderSpec != null)
        msgs = ((InternalEObject)newOrderSpec).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MetaCrySLPackage.SPEC__ORDER_SPEC, null, msgs);
      msgs = basicSetOrderSpec(newOrderSpec, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MetaCrySLPackage.SPEC__ORDER_SPEC, newOrderSpec, newOrderSpec));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MetaCrySLPackage.SPEC__CLASS_NAME:
        return basicSetClassName(null, msgs);
      case MetaCrySLPackage.SPEC__OBJECT_SPEC:
        return basicSetObjectSpec(null, msgs);
      case MetaCrySLPackage.SPEC__FORBIDDEN_SPEC:
        return basicSetForbiddenSpec(null, msgs);
      case MetaCrySLPackage.SPEC__EVENT_SPEC:
        return basicSetEventSpec(null, msgs);
      case MetaCrySLPackage.SPEC__ORDER_SPEC:
        return basicSetOrderSpec(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MetaCrySLPackage.SPEC__CLASS_NAME:
        return getClassName();
      case MetaCrySLPackage.SPEC__OBJECT_SPEC:
        return getObjectSpec();
      case MetaCrySLPackage.SPEC__FORBIDDEN_SPEC:
        return getForbiddenSpec();
      case MetaCrySLPackage.SPEC__EVENT_SPEC:
        return getEventSpec();
      case MetaCrySLPackage.SPEC__ORDER_SPEC:
        return getOrderSpec();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MetaCrySLPackage.SPEC__CLASS_NAME:
        setClassName((JvmTypeReference)newValue);
        return;
      case MetaCrySLPackage.SPEC__OBJECT_SPEC:
        setObjectSpec((ObjectSpec)newValue);
        return;
      case MetaCrySLPackage.SPEC__FORBIDDEN_SPEC:
        setForbiddenSpec((ForbiddenSpec)newValue);
        return;
      case MetaCrySLPackage.SPEC__EVENT_SPEC:
        setEventSpec((EventSpec)newValue);
        return;
      case MetaCrySLPackage.SPEC__ORDER_SPEC:
        setOrderSpec((OrderSpec)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MetaCrySLPackage.SPEC__CLASS_NAME:
        setClassName((JvmTypeReference)null);
        return;
      case MetaCrySLPackage.SPEC__OBJECT_SPEC:
        setObjectSpec((ObjectSpec)null);
        return;
      case MetaCrySLPackage.SPEC__FORBIDDEN_SPEC:
        setForbiddenSpec((ForbiddenSpec)null);
        return;
      case MetaCrySLPackage.SPEC__EVENT_SPEC:
        setEventSpec((EventSpec)null);
        return;
      case MetaCrySLPackage.SPEC__ORDER_SPEC:
        setOrderSpec((OrderSpec)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MetaCrySLPackage.SPEC__CLASS_NAME:
        return className != null;
      case MetaCrySLPackage.SPEC__OBJECT_SPEC:
        return objectSpec != null;
      case MetaCrySLPackage.SPEC__FORBIDDEN_SPEC:
        return forbiddenSpec != null;
      case MetaCrySLPackage.SPEC__EVENT_SPEC:
        return eventSpec != null;
      case MetaCrySLPackage.SPEC__ORDER_SPEC:
        return orderSpec != null;
    }
    return super.eIsSet(featureID);
  }

} //SpecImpl
